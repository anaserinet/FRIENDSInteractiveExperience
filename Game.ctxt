#BlueJ class context
comment0.target=Game
comment0.text=\r\n\ \ This\ class\ is\ the\ main\ class\ of\ the\ "FRIENDS\:\ An\ Interactive\ Videogame"\ application\ based\ on\ the\ TV\ show\ "Friends".\ \ \r\n\ \ Users\ can\:\r\n\ \ -\ walk\ around\ the\ Friends\ basic\ set.\ (13\ rooms)\r\n\ \ -\ interact\ with\ items\ in\ the\ rooms\ (grabbing\ and\ dropping\ items)\r\n\ \ -\ interact\ with\ the\ main\ characters\ of\ the\ series\ (talking\ to\ them)\r\n\ \ The\ game\ consists\ of\ completing\ tasks\ and\ collecting\ enough\ money\ to\ "save\ central\ perk\ from\ closing\ down"\r\n\ Each\ task\ has\ a\ certain\ amount\ of\ subtasks\ that\ you\ have\ to\ complete\ that\ involve\ different\ rooms,\ items\ and\ characters\r\n\ \ \r\n\ \ To\ play\ this\ game,\ create\ an\ instance\ of\ this\ class\ and\ call\ the\ "play"\r\n\ \ method.\r\n\ \r\n\ \ This\ main\ class\:\r\n\ \ -\ Creates\ and\ initialises\ all\ the\ others\:\ it\ creates\ all\r\n\ \ rooms,\ creates\ the\ parser\ and\ starts\ the\ game.\ \ \r\n\ \ -\ Evaluates\ and\ executes\ the\ commands\ that\ the\ parser\ returns.\r\n\ \ -\ Prints\ all\ of\ the\ what\ needs\ to\ be\ displayed\ to\ the\ terminal\r\n\ \r\n\ @author\ \ Michael\ K\u00F6lling,\ David\ J.\ Barnes\ and\ Ana\ Clara\ Monteiro\r\n\ @version\ 27/11/2024\r\n
comment1.params=
comment1.target=Game()
comment1.text=\r\n\ Create\ the\ game\ and\ initialise\ its\ internal\ map.\r\n
comment10.params=
comment10.target=void\ switchToNextInTask()
comment10.text=\r\n\ \ Goes\ to\ next\ subtask.\ If\ all\ subtasks\ are\ completed,\ it\ completes\ the\ task\ (giving\ the\ respective\ reward\ to\ the\ player)\ and\ goes\ to\ the\ next\ task.\ If\ all\ tasks\ are\ completed,\ you\ won\ the\ game\!\r\n
comment11.params=
comment11.target=void\ winGame()
comment11.text=\r\n\ Decides\ what\ random\ ending\ the\ Player\ gets\ and\ prints\ out\ finale\ to\ the\ terminal\r\n\ finale\ 1\:\ becoming\ a\ broke\ gambler,\ the\ coffee\ house\ does\ not\ get\ saved\r\n\ finale\ 2\:\ saving\ central\ perk\r\n
comment12.params=
comment12.target=void\ printTaskDescription()
comment12.text=\r\n\ Prints\ a\ description\ of\ the\ current\ task\ and\ the\ task's\ reward\r\n
comment13.params=
comment13.target=void\ play()
comment13.text=\r\n\ \ Main\ play\ routine.\ \ Loops\ until\ end\ of\ play.\r\n
comment14.params=
comment14.target=void\ printWelcome()
comment14.text=\r\n\ Print\ out\ the\ opening\ message\ for\ the\ player.\r\n
comment15.params=command
comment15.target=boolean\ processCommand(Command)
comment15.text=\r\n\ Given\ a\ command,\ process\ (that\ is\:\ execute)\ the\ command.\r\n\ @param\ command\ The\ command\ to\ be\ processed.\r\n\ @return\ true\ If\ the\ command\ ends\ the\ game,\ false\ otherwise.\r\n
comment16.params=
comment16.target=void\ printHelp()
comment16.text=\r\n\ Print\ out\ some\ help\ information.\r\n\ Here\ we\ print\:\r\n\ -\ A\ list\ of\ the\ command\ words\r\n\ -\ The\ current\ task,\ t\r\n\ -\ The\ Item\ in\ the\ Player's\ Backpack,\r\n\ -\ the\ money\ in\ Player's\ pocket\r\n\ -\ The\ Room\ description\ (with\ exits\ and\ items\ in\ room)\r\n
comment17.params=command
comment17.target=void\ goRoom(Command)
comment17.text=\ \r\n\ Try\ to\ go\ to\ another\ Room\ in\ to\ one\ direction.\ If\ there\ is\ an\ exit,\ enter\ the\ new\r\n\ room,\ otherwise\ print\ an\ error\ message\ and\ display\ the\ possible\ exits.\r\n
comment18.params=roomEntered
comment18.target=void\ addTrackRooms(Room)
comment18.text=\ \r\n\ adds\ Room\ to\ an\ ArrayList\ that\ keeps\ track\ of\ the\ Rooms\ the\ Player\ has\ entered\r\n
comment19.params=
comment19.target=boolean\ getFinale()
comment19.text=\ \r\n\ Checks\ if\ the\ requirements\ (Tasks)\ to\ be\ able\ to\ complete\ the\ game\ have\ been\ met.\ \r\n\ If\ they\ have,\ this\ command\ wins\ the\ game\ \r\n\ If\ they\ haven't,\ it\ lets\ you\ know\ you\ still\ have\ Tasks\ to\ complete\r\n
comment2.params=
comment2.target=void\ createRooms()
comment2.text=\r\n\ Create\ all\ the\ rooms\ and\ link\ their\ exits\ together.\ \r\n\ Add\ Rooms\ to\ a\ map\ that\ maps\ the\ Room\ name\ with\ the\ Room\ object\r\n
comment20.params=command
comment20.target=void\ grabItem(Command)
comment20.text=\ \r\n\ Tries\ to\ grab\ item.\ If\ the\ item\ exists,\ it\ checks\ if\ if\ the\ item's\ weight\ exceeds\ the\ limit\ of\ weight\ that\ the\ Player\ can\ carry.\ \r\n\ If\ it\ passes\ the\ limit,\ it\ does\ not\ pick\ up\ the\ item.\ \r\n
comment21.params=command
comment21.target=boolean\ dropItem(Command)
comment21.text=\ \r\n\ "drop"\ was\ entered.\ Drops\ an\ item\ if\ that\ item\ has\ been\ grabbed\ previously.\ \r\n\ @return\ true,\ if\ this\ command\ drops\ the\ item,\ false\ otherwise.\r\n
comment22.params=command
comment22.target=boolean\ talkTo(Command)
comment22.text=\ \r\n\ "talk-to\ (character's\ name)"\ \ was\ entered.\ \r\n\ it\ Prints\ the\ character's\ dialogue.\ \ \r\n\ If\ the\ command\ has\ no\ second\ word,\ display\ the\ people\ in\ the\ Room\ the\ Player\ can\ "talk-to".\ \r\n\ @return\ true,\ if\ this\ command\ talks\ to\ a\ character,\ false\ otherwise.\r\n
comment23.params=command
comment23.target=boolean\ quit(Command)
comment23.text=\ \r\n\ "Quit"\ was\ entered.\ Check\ the\ rest\ of\ the\ command\ to\ see\r\n\ whether\ we\ really\ quit\ the\ game.\r\n\ @return\ true,\ if\ this\ command\ quits\ the\ game,\ false\ otherwise.\r\n
comment24.params=
comment24.target=boolean\ backTrack()
comment24.text=\ \r\n\ "Back"\ was\ entered.\ The\ Player\ will\ be\ transported\ to\ the\ previous\ Room\ they\ were\ in.\ \r\n\ If\ there\ is\ no\ previous\ Room,\ it\ displays\ a\ message\ and\ stays\ in\ the\ same\ Room.\r\n\ @return\ true,\ if\ this\ command\ quits\ the\ game,\ false\ otherwise.\r\n
comment25.params=
comment25.target=int\ getNumRooms()
comment25.text=\ \r\n\ Returns\ how\ many\ Rooms\ there\ are\ in\ this\ game.\r\n
comment3.params=
comment3.target=void\ createItems()
comment3.text=\r\n\ Creates\ all\ the\ items,\ setting\ them\ to\ their\ respective\ rooms.\ \r\n
comment4.params=
comment4.target=void\ createPlayers()
comment4.text=\r\n\ \ Creates\ the\ players\ in\ the\ game\r\n
comment5.params=
comment5.target=void\ createCharacters()
comment5.text=\r\n\ \ Creates\ the\ characters\ of\ the\ game,\ linking\ them\ to\ their\ respective\ Rooms.\r\n
comment6.params=
comment6.target=void\ createTasks()
comment6.text=\r\n\ \ Creates\ the\ Tasks\ of\ the\ game\ and\ set\ the\ current\ task\ to\ the\ first\ time\ created.\ \r\n
comment7.params=
comment7.target=void\ checkIfTalkCompletesTask()
comment7.text=\r\n\ \ When\ the\ Player\ "talk-to"\ a\ Character,\ this\ checks\ if\ by\ talking\ to\ that\ Character\ a\ part\ of\ a\ Task\ is\ completed\r\n
comment8.params=grabbedItem
comment8.target=void\ checkIfGrabCompletesTask(Item)
comment8.text=\r\n\ \ When\ the\ Player\ grabs\ an\ Item,\ this\ checks\ if\ by\ grabbing\ that\ Item\ a\ part\ of\ a\ Task\ is\ completed\r\n\ \ @param\ grabbedItem\ (Item)\ \ \ \r\n
comment9.params=
comment9.target=void\ subTaskCompletion()
comment9.text=\r\n\ \ Prints\ out\ a\ message\ of\ completing\ a\ subtask.\ Also\ prints\r\n\ \ how\ many\ subtasks\ you\ have\ completed\ for\ that\ Task\ \ \r\n
numComments=26
