#BlueJ class context
comment0.target=Room
comment0.text=\r\n\ Class\ Room\ -\ a\ room\ in\ a\ game.\r\n\r\n\ This\ class\ is\ part\ of\ the\ "FRIENDS\:\ An\ Interactive\ Videogame"\ application.\ \r\n\ "FRIENDS\:\ An\ Interactive\ Videogame"\ is\ an\ application\ based\ on\ the\ TV\ show\ "Friends".\ \ \ \r\n\ \r\n\ A\ "Room"\ can\ be\ of\ 2\ types\:\ \r\n\ -Normal\ Room-\:\ A\ "Room"\ represents\ one\ location\ in\ the\ scenery\ of\ the\ game.\ \ It\ is\ \r\n\ \ \ connected\ to\ other\ rooms\ via\ exits.\ \ For\ each\ existing\ exit,\ the\ room\ \r\n\ \ \ stores\ a\ reference\ to\ the\ neighboring\ room.\r\n\ -Random\ Room--\:\ \ A\ special\ type\ of\ room\ that\ initially\ exists\ as\ a\ placeholder\ \r\n\ \ \ but\ transforms\ into\ a\ randomly\ chosen\ normal\ room\ during\ gameplay.\r\n\ \r\n\ Each\ "Room"\ can\ have\ the\ following\:\r\n\ -\ Exits\:\ Links\ to\ other\ rooms,\ mapped\ by\ directions\ (ex\:\ "north"\ or\ "west").\r\n\ -\ Items\:\ Objects\ the\ player\ can\ interact\ with\ or\ collect\ (Items\ is\ a\ separate\ class).\r\n\ -\ Characters\:\ NPCs\ that\ may\ inhabit\ the\ room.\r\n\ -\ Attributes\:\ Descriptions\ and\ other\ unique\ identifiers\ (ex\:\ type\ of\ room).\r\n\ \ \ \ \r\n\ @author\ \ Michael\ K\u00F6lling\ and\ David\ J.\ Barnes,\ Ana\ Clara\ Monteiro\r\n\ @version\ 27/11/2024\r\n
comment1.params=description
comment1.target=Room(java.lang.String)
comment1.text=\r\n\ Create\ a\ room\ described\ "description".\ Initially,\ it\ has\r\n\ no\ exits.\ "description"\ is\ something\ like\ "a\ kitchen"\ or\r\n\ "an\ open\ court\ yard".\ \ \ \ \r\n\ @param\ description\ (String)\ The\ room's\ description.\r\n
comment10.params=
comment10.target=java.util.ArrayList\ getCharactersArray()
comment10.text=\r\n\ @return\ an\ Array\ List\ with\ the\ names\ of\ all\ of\ the\ Characters\ in\ the\ Room\ \r\n
comment11.params=characterName
comment11.target=void\ addCharacter(java.lang.String)
comment11.text=\r\n\ Adds\ a\ Character's\ name\ to\ the\ Character's\ \ respective\ Room\ \r\n\ @param\ characterName\ (String)\ name\ of\ the\ character\r\n
comment12.params=name
comment12.target=Item\ findItemByName(java.lang.String)
comment12.text=\r\n\ Checks\ if\ an\ item\ in\ the\ Room\ matches\ the\ name\ inputed.\ If\ such\ Item\ does\ not\ exist,\ it\ returns\ null\r\n\ @param\ name\ (String)\ \ name\ of\ the\ room\ you\ are\ trying\ to\ find\ \r\n\ @return\ (Item)\ \ \ item\ that\ matches\ inputed\ name\r\n
comment13.params=
comment13.target=java.lang.String\ getStringCharactersInRoom()
comment13.text=\r\n\ @returns\ the\ Characters\ in\ the\ Room\ (their\ names)\ in\ a\ String\ \r\n
comment14.params=direction
comment14.target=Room\ getNextRoom(java.lang.String)
comment14.text=\r\n\ @returns\ the\ Room\ that\ the\ user\ wants\ to\ go\ to.\ Returns\ null\ if\ the\ room\ does\ not\ exist\ \r\n
comment15.params=Rooms
comment15.target=void\ setRooms(java.util.HashMap)
comment16.params=
comment16.target=java.util.HashMap\ getAllRooms()
comment2.params=direction\ neighbor
comment2.target=void\ setExit(java.lang.String,\ Room)
comment2.text=\r\n\ Define\ an\ exit\ from\ this\ room.\r\n\ @param\ direction\ (String)\ The\ direction\ of\ the\ exit.\r\n\ @param\ neighbor\ (Room)\ The\ room\ to\ which\ the\ exit\ leads.\r\n
comment3.params=
comment3.target=java.lang.String\ getShortDescription()
comment3.text=\r\n\ @return\ The\ short\ description\ of\ the\ room\r\n\ (the\ one\ that\ was\ defined\ in\ the\ constructor).\r\n
comment4.params=
comment4.target=java.lang.String\ getLongDescription()
comment4.text=\r\n\ @return\ A\ long\ description\ of\ this\ room\r\n\ If\ the\ room\ has\ no\ roomType,\ return\ a\ description\ of\ the\ room\ in\ the\ form\:\r\n\ \ \ \ \ You\ are\ in\ the\ kitchen.\r\n\ \ \ \ \ Exits\:\ north\ west\r\n\ If\ the\ room\ is\ of\ roomType\ "random"\ return\ a\ description\ in\ the\ form\:\r\n\ \ \ \ \ \ \r\n
comment5.params=
comment5.target=java.lang.String\ getExitString()
comment5.text=\r\n\ @return\ a\ String\ describing\ the\ room's\ exits,\ for\ example\r\n\ "Exits\:\ north\ west".\r\n
comment6.params=direction
comment6.target=Room\ getExit(java.lang.String)
comment6.text=\r\n\ Return\ the\ room\ that\ is\ reached\ if\ we\ go\ from\ this\ room\ in\ direction\r\n\ "direction".\ If\ there\ is\ no\ room\ in\ that\ direction,\ return\ null.\r\n\ @param\ direction\ The\ exit's\ direction.\r\n\ @return\ The\ room\ in\ the\ given\ direction.\r\n
comment7.params=newItem
comment7.target=void\ addItem(Item)
comment7.text=\r\n\ Adds\ an\ Item\ to\ its\ respective\ Room\ \r\n\ @param\ newItem\ Item\ that\ is\ added\ to\ Room\r\n
comment8.params=
comment8.target=java.lang.String\ getItems()
comment8.text=\r\n\ "@returns\ the\ Items\ in\ the\ Room\ (their\ names)\ in\ a\ String\ \r\n
comment9.params=
comment9.target=java.util.ArrayList\ getItemsArray()
comment9.text=\r\n\ @return\ an\ Array\ List\ with\ all\ of\ the\ items\ in\ the\ Room\ \r\n
numComments=17
